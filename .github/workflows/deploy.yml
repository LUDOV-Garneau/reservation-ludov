name: Deploy
on:
  push:
    branches: [ main ]

env:
  REGISTRY: registry.72-60-124-92.sslip.io
  IMAGE_NAME: web
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install deps
        run: npm ci

      - name: Lint & Test & Build
        env:
          NEXT_TELEMETRY_DISABLED: 1
        run: |
          npm run lint
          npm test -- --ci
          npm run build

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to private registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build & push image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: SSH deploy (pull + up -d)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}      # 72.60.124.92
          username: ${{ secrets.SSH_USER }}  # root
          key: ${{ secrets.SSH_KEY }}        # clé privée OpenSSH
          script: |
            set -e
            export REGISTRY=${{ env.REGISTRY }}
            export IMAGE_TAG=${{ env.IMAGE_TAG }}
            cd /opt/ludoReservation
            # login (utile si le serveur a besoin d’auth pour pull)
            docker login $REGISTRY -u '${{ secrets.REGISTRY_USERNAME }}' -p '${{ secrets.REGISTRY_PASSWORD }}'
            IMAGE_TAG=$IMAGE_TAG docker compose pull web
            IMAGE_TAG=$IMAGE_TAG docker compose up -d --no-deps web
            # (optionnel) attendre un peu et afficher l’état
            sleep 5
            docker ps
            docker image prune -f
